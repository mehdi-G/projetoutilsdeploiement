#!/bin/bash

# Créer un réseau Docker si ce n'est pas déjà fait
docker network create my_network || true

# Lancer les conteneurs web1, web2, et web3 dans le même réseau
docker run -d --name web1 --network my_network alpine /bin/sh -c "while true; do sleep 30; done"
docker run -d --name web2 --network my_network alpine /bin/sh -c "while true; do sleep 30; done"
docker run -d --name web3 --network my_network alpine /bin/sh -c "while true; do sleep 30; done"

echo "Les conteneurs suivants ont été créés :"
docker ps --format "table {{.Names}}\t{{.Status}}"

# Demander à l'utilisateur sur quel conteneur installer Ansible
echo "Choisissez un conteneur pour installer Ansible :"
read -p "Entrez le nom du conteneur (web1, web2, web3) : " chosen_container

# Vérifier si le conteneur existe
if [ "$(docker ps -q -f name=$chosen_container)" ]; then
    # Installer Ansible dans le conteneur choisi
    echo "Installation d'Ansible..."
    output=$(docker exec $chosen_container sh -c "apk add --no-cache ansible openssh sshpass" 2>&1)
    echo "$output"

    # Vérifier si Ansible est installé
    ansible_installed=$(docker exec $chosen_container ansible --version 2>&1)
    
    if [ "$(echo $ansible_installed | grep 'ansible')" ]; then
        echo "Ansible a été installé avec succès dans le conteneur $chosen_container !"
    else
        echo "Erreur lors de l'installation d'Ansible dans le conteneur $chosen_container."
        echo "Détails : $ansible_installed"
        exit 1
    fi

    # Installer la clé SSH
    docker exec $chosen_container sh -c "ssh-keygen -t rsa -N '' -f /root/.ssh/id_rsa"

    # Créer le fichier inventory.ini
    echo "Création du fichier inventory.ini dans le conteneur..."
    docker exec $chosen_container sh -c "echo '[webservers]' > /root/inventory.ini"
    
    # Obtenir les adresses IP des conteneurs et les ajouter à inventory.ini
    for container in web1 web2 web3; do
        if [ "$container" != "$chosen_container" ]; then
            ip_address=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $container)
            echo "Ajout de $container avec IP: $ip_address dans inventory.ini..."
            docker exec $chosen_container sh -c "echo '$container ansible_host=$ip_address' >> /root/inventory.ini"
        fi
    done

    echo "Fichier inventory.ini créé dans le conteneur $chosen_container."

    # Obtenir l'adresse IP de chaque conteneur et les ajouter au fichier /etc/hosts
    for container in web1 web2 web3; do
        ip_address=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $container)
        echo "Ajout de $container avec IP: $ip_address dans /etc/hosts..."
        docker exec $chosen_container sh -c "echo '$ip_address $container' >> /etc/hosts"
    done

    echo "Clé SSH copiée sur les autres conteneurs."

    # Vérifier si le playbook existe avant de l'exécuter
    if docker exec $chosen_container [ -f /playbook.yml ]; then
        # Lancer le playbook Ansible
        docker exec $chosen_container sh -c "ansible-playbook -i /root/inventory.ini /playbook.yml"
    else
        echo "ERROR! Le playbook: /playbook.yml est introuvable."
    fi
else
    echo "Le conteneur choisi n'existe pas. Veuillez vérifier le nom et réessayer."
fi
